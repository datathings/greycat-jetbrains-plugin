/**
 * Copyright 2017 The GreyCat Authors.  All rights reserved.
 * <p>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
{
  parserClass="greycat.idea.parser.MetaModelParser"
  parserUtilClass="greycat.idea.parser.MetaModelParserUtil"
  stubParserClass="greycat.idea.parser.GeneratedParserUtilBase"
  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"
  psiClassPrefix="GreyCatModel"
  psiImplClassSuffix="Impl"
  psiPackage="greycat.idea.psi"
  psiImplPackage="greycat.idea.psi.impl"

  elementTypeHolderClass="greycat.idea.psi.MetaModelTypes"
  elementTypeClass="greycat.idea.psi.MetaModelElementType"
  tokenTypeClass="greycat.idea.psi.MetaModelTokenType"

  psiImplUtilClass="greycat.idea.psi.MetaModelUtil"

tokens=[
    WITH='with'
    INDEX='index'
    CLASS='class'
    ENUM='enum'
    FUNC='func'
    ATT='att'
    REF='rel'
    FROM='from'
    USING='using'
    ARRAY='[]'
    EXTENDS='extends'
    COLON=':'
    COMMA=','
    SUB='/'
    EQ='='
    BODY_OPEN='{'
    BODY_CLOSE='}'
    ANNOT_PARAM_OPEN='('
    ANNOT_PARAM_CLOSE=')'
    MULT_SEP='.'
    eof = '<<EOF>>'
    comment='regexp://.*'
    NUMBER='regexp:[\-]?[0-9]+[.]?[0-9]*'
    IDENT='regexp:[\*\.a-zA-Z0-9_\-]+'
    string="regexp:('([^'\\]|\\.)*'|\"([^\"\\]|\\.)*\")"
  ]
}

METAMODEL ::= DECLARATION*

DECLARATION ::= (CLASS_DECLARATION | ENUM_DECLARATION | INDEX_DECLARATION | eof | newline | CRLF)
CLASS_DECLARATION ::= CLASS TYPE_DECLARATION PARENTS_DECLARATION? BODY_OPEN ANNOTATION_DECLR* CLASS_ELEM_DECLARATION* BODY_CLOSE //{pin=2 recoverWhile=rule_start}
ENUM_DECLARATION ::= ENUM TYPE_DECLARATION BODY_OPEN ENUM_ELEM_DECLARATION (COMMA ENUM_ELEM_DECLARATION)* BODY_CLOSE //{pin=2 recoverWhile=rule_start}
INDEX_DECLARATION ::= INDEX TYPE_DECLARATION COLON TYPE_DECLARATION BODY_OPEN INDEX_ELEM_DECLARATION (COMMA INDEX_ELEM_DECLARATION)* BODY_CLOSE //{pin=2 recoverWhile=rule_start}

ENUM_ELEM_DECLARATION ::= IDENT
INDEX_ELEM_DECLARATION ::= IDENT

PARENTS_DECLARATION ::= EXTENDS TYPE_DECLARATION (COMMA TYPE_DECLARATION)*
TYPE_DECLARATION ::= IDENT {mixin="org.kevoree.modeling.idea.psi.impl.MetaModelNamedElementImpl" implements="org.kevoree.modeling.idea.psi.MetaModelNamedElement" methods=[setName getNameIdentifier]}
CLASS_ELEM_DECLARATION ::= ATTRIBUTE_DECLARATION | RELATION_DECLARATION | DEPENDENCY_DECLARATION

ATTRIBUTE_DECLARATION ::= ATT ATTRIBUTE_NAME COLON TYPE_DECLARATION SEMANTIC_DECLR?
ATTRIBUTE_NAME ::= IDENT

RELATION_DECLARATION ::= REF RELATION_NAME COLON TYPE_DECLARATION SEMANTIC_DECLR?
RELATION_NAME ::= IDENT

SEMANTIC_DECLR ::= BODY_OPEN SEMANTIC_ELEM_DECLR* BODY_CLOSE
SEMANTIC_ELEM_DECLR ::= SEMANTIC_USING|SEMANTIC_WITH|SEMANTIC_FROM
SEMANTIC_USING ::= USING string
SEMANTIC_WITH ::= WITH IDENT string
SEMANTIC_FROM ::= FROM string

private rule_start ::= !(CLASS|ENUM|INDEX)
