/**
 * Copyright 2017 The GreyCat Authors.  All rights reserved.
 * <p>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
{
  parserClass="greycat.idea.parser.GCMParser"
  parserUtilClass="greycat.idea.parser.GCMParserUtil"
  stubParserClass="greycat.idea.parser.GeneratedParserUtilBase"
  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"
  psiClassPrefix="GCM"
  psiImplClassSuffix="Impl"
  psiPackage="greycat.idea.psi"
  psiImplPackage="greycat.idea.psi.impl"

  elementTypeHolderClass="greycat.idea.psi.GCMTypes"
  elementTypeClass="greycat.idea.GCMElementType"
  tokenTypeClass="greycat.idea.GCMTokenType"

  psiImplUtilClass="greycat.idea.GCMUtil"

tokens=[
    KEY_WITH_TIME='key with time'
    KEY='key'
    AS = 'as'
    CLASS='class'
    ENUM='enum'
    ATT='att'
    ARRAY='[]'
    REF='ref'
    REL='rel'
    EXTENDS='extends'
    COMMA=','
    COLON=':'
    BODY_OPEN='{'
    BODY_CLOSE='}'
    ANNOT_PARAM_OPEN='('
    ANNOT_PARAM_CLOSE=')'
    MULT_SEP='.'
    eof = '<<EOF>>'
    comment='regexp://.*'
    NUMBER='regexp:[\-]?[0-9]+[.]?[0-9]*'
    IDENT='regexp:[\*\.a-zA-Z0-9_\-]+'
    string="regexp:('([^'\\]|\\.)*'|\"([^\"\\]|\\.)*\")"
  ]
}


GREYCATMODEL ::= DECLARATION*

DECLARATION ::= (ENUM_DECLARATION | CLASS_DECLARATION | eof | newline | CRLF)
ENUM_DECLARATION ::= ENUM TYPE_DECLARATION BODY_OPEN ENUM_ELEM_DECLARATION (COMMA ENUM_ELEM_DECLARATION)* BODY_CLOSE //{pin=2 recoverWhile=rule_start}
ENUM_ELEM_DECLARATION ::= IDENT
TYPE_DECLARATION ::= IDENT {mixin="greycat.idea.GCMNamedElementImpl" implements="greycat.idea.GCMNamedElement" methods=[setNameIdentifier getNameIdentifier]}

CLASS_DECLARATION ::= CLASS TYPE_DECLARATION PARENTS_DECLARATION? BODY_OPEN CLASS_ELEM_DECLARATION* BODY_CLOSE //{pin=2 recoverWhile=rule_start}
PARENTS_DECLARATION ::= EXTENDS TYPE_DECLARATION

CLASS_ELEM_DECLARATION ::= ATTRIBUTE_DECLARATION | RELATION_DECLARATION | KEY_DECLARATION

ATTRIBUTE_DECLARATION ::= ATT ATTRIBUTE_NAME COLON TYPE_DECLARATION
ATTRIBUTE_NAME ::= IDENT

RELATION_DECLARATION ::= (TO_ONE_DECLARATION | TO_MANY_DECLARATION)
TO_ONE_DECLARATION ::= REF RELATION_NAME COLON TYPE_DECLARATION
RELATION_NAME ::= IDENT
TO_MANY_DECLARATION ::= REL RELATION_NAME COLON TYPE_DECLARATION (RELATION_INDEX_DECLARATION)?
RELATION_INDEX_DECLARATION ::= INDEXED_BY ATTRIBUTE_NAME (COMMA ATTRIBUTE_NAME)*

KEY_DECLARATION ::= (KEY_WITH_TIME_DECLARATION | KEY_WITHOUT_TIME_DECLARATION) ATTRIBUTE_NAME (COMMA ATTRIBUTE_NAME)* (AS KEY_NAME_DECLARATION)?
KEY_WITH_TIME_DECLARATION ::= KEY_WITH_TIME
KEY_WITHOUT_TIME_DECLARATION ::= KEY
KEY_NAME_DECLARATION ::= IDENT

private rule_start ::= !(CLASS|ENUM)